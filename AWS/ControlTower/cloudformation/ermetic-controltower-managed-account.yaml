AWSTemplateFormatVersion: 2010-09-09
Description: Ermetic AWS Control Tower managed account template

# ---------------------------------------------------------------------------------------------------------------
#
#   This template creates the Ermetic Integration IAM role in a Control Tower managed account.
#
# ---------------------------------------------------------------------------------------------------------------

Parameters:
  ErmeticAccountId:
    Description: Ermetic AWS Account ID (12 digits).
    Type: String
    Default: "081802104111"
  ErmeticExternalId:
    AllowedPattern: .+
    ConstraintDescription: ErmeticExternalId is required
    Description: Ermetic external ID
    Type: String

Resources:
  ErmeticRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${ErmeticAccountId}:root"
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ErmeticExternalId
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"
      Policies:
        - PolicyName: ReadOnly
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - acm:Describe*
                  - acm:List*
                  - aoss:BatchGet*
                  - aoss:List*
                  - autoscaling:Describe*
                  - batch:Describe*
                  - batch:List*
                  - bedrock:Get*
                  - bedrock:List*
                  - cloudformation:Describe*
                  - cloudformation:Get*
                  - cloudformation:List*
                  - cloudfront:Get*
                  - cloudfront:ListDistributions*
                  - cloudtrail:Describe*
                  - cloudtrail:Get*
                  - cloudtrail:List*
                  - cloudtrail:LookupEvents
                  - cloudwatch:Describe*
                  - cloudwatch:GetMetric*
                  - cloudwatch:ListMetrics
                  - cognito-idp:ListResourcesForWebACL
                  - cognito-sync:GetCognitoEvents
                  - config:Describe*
                  - dynamodb:Describe*
                  - dynamodb:GetResourcePolicy
                  - dynamodb:List*
                  - ec2:Describe*
                  - ecr:Describe*
                  - ecr:GetRegistryScanningConfiguration
                  - ecr:GetRepositoryPolicy
                  - ecr:List*
                  - ecr:StartImageScan
                  - ecr-public:Describe*
                  - ecr-public:GetRepositoryPolicy
                  - ecr-public:List*
                  - ecs:Describe*
                  - ecs:List*
                  - eks:Describe*
                  - eks:List*
                  - elasticache:Describe*
                  - elasticache:List*
                  - elasticbeanstalk:Describe*
                  - elasticbeanstalk:List*
                  - elasticloadbalancing:Describe*
                  - elasticmapreduce:Describe*
                  - elasticmapreduce:List*
                  - es:Describe*
                  - es:List*
                  - events:ListRules
                  - iam:Generate*
                  - iam:Get*
                  - iam:List*
                  - identitystore:Describe*
                  - inspector2:List*
                  - iot:GetTopicRule
                  - kms:Describe*
                  - kms:GetKey*
                  - kms:List*
                  - kinesis:Describe*
                  - kinesis:List*
                  - lambda:Get*Policy
                  - lambda:GetAccountSettings
                  - lambda:List*
                  - logs:Describe*
                  - organizations:Describe*
                  - organizations:List*
                  - rds:Describe*
                  - rds:List*
                  - redshift:Describe*
                  - redshift:List*
                  - redshift-serverless:List*
                  - redshift-serverless:Get*
                  - route53:Get*
                  - route53:List*
                  - route53domains:Get*
                  - route53domains:List*
                  - route53resolver:Get*
                  - route53resolver:List*
                  - s3:Describe*
                  - s3:GetAccessPoint*
                  - s3:GetAccountPublicAccessBlock
                  - s3:GetBucket*
                  - s3:GetEncryptionConfiguration
                  - s3:GetJobTagging
                  - s3:GetLifecycleConfiguration
                  - s3:ListAccessPoints
                  - s3:ListAllMyBuckets
                  - s3:ListBucketVersions
                  - s3:ListJobs
                  - sagemaker:Describe*
                  - sagemaker:List*
                  - secretsmanager:Describe*
                  - secretsmanager:GetResourcePolicy
                  - secretsmanager:List*
                  - sns:Get*
                  - sns:List*
                  - sqs:Get*
                  - sqs:List*
                  - ssm:Describe*
                  - ssm:List*
                  - sso:Describe*
                  - sso:Get*
                  - sso:List*
                  - sso-directory:List*
                  - sso-directory:Search*
                  - sts:DecodeAuthorizationMessage
                  - tag:Get*
                  - wafv2:Get*
                  - wafv2:List*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource: !Sub "arn:${AWS::Partition}:s3:::elasticbeanstalk-*"
              - Effect: Allow
                Action: apigateway:Get*
                NotResource: !Sub "arn:${AWS::Partition}:apigateway:*::/apikeys*"
      RoleName: ErmeticRole